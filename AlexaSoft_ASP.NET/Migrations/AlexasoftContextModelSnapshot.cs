// <auto-generated />
using System;
using AlexaSoft_ASP.NET.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlexaSoft_ASP.NET.Migrations
{
    [DbContext(typeof(AlexasoftContext))]
    partial class AlexasoftContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCategoriaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaProducto"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCategoriaProducto")
                        .HasName("PK_categoria_productos_idCategoriaProducto");

                    b.ToTable("categoria_productos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCita");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<string>("Detalle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("detalle");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time")
                        .HasColumnName("hora");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int")
                        .HasColumnName("idColaborador");

                    b.Property<int>("IdHorario")
                        .HasColumnType("int")
                        .HasColumnName("idHorario");

                    b.Property<int?>("IdMotivoCancelacion")
                        .HasColumnType("int")
                        .HasColumnName("idMotivoCancelacion");

                    b.Property<int>("IdPaquete")
                        .HasColumnType("int")
                        .HasColumnName("idPaquete");

                    b.HasKey("IdCita")
                        .HasName("PK_citas_idCita");

                    b.HasIndex(new[] { "IdCliente" }, "idCliente");

                    b.HasIndex(new[] { "IdColaborador" }, "idColaborador");

                    b.HasIndex(new[] { "IdHorario" }, "idHorario");

                    b.HasIndex(new[] { "IdMotivoCancelacion" }, "idMotivoCancelacion");

                    b.HasIndex(new[] { "IdPaquete" }, "idPaquete");

                    b.ToTable("citas", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("correo");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaInteraccion")
                        .HasColumnType("date")
                        .HasColumnName("fechaInteraccion");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("instagram");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("telefono");

                    b.HasKey("IdCliente")
                        .HasName("PK_clientes_idCliente");

                    b.HasIndex(new[] { "Correo" }, "clientes$correo")
                        .IsUnique();

                    b.HasIndex(new[] { "Instagram" }, "clientes$instagram")
                        .IsUnique();

                    b.HasIndex(new[] { "Telefono" }, "clientes$telefono")
                        .IsUnique();

                    b.HasIndex(new[] { "IdRol" }, "idRol");

                    b.ToTable("clientes", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Colaboradore", b =>
                {
                    b.Property<int>("IdColaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idColaborador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColaborador"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("cedula");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("correo");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaInteraccion")
                        .HasColumnType("date")
                        .HasColumnName("fechaInteraccion");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("telefono");

                    b.HasKey("IdColaborador")
                        .HasName("PK_colaboradores_idColaborador");

                    b.HasIndex(new[] { "Cedula" }, "colaboradores$cedula")
                        .IsUnique();

                    b.HasIndex(new[] { "Correo" }, "colaboradores$correo")
                        .IsUnique();

                    b.HasIndex(new[] { "Telefono" }, "colaboradores$telefono")
                        .IsUnique();

                    b.HasIndex(new[] { "IdRol" }, "idRol");

                    b.ToTable("colaboradores", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    b.Property<string>("MotivoAnular")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("motivoAnular");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("precio");

                    b.Property<int>("Subtotal")
                        .HasColumnType("int")
                        .HasColumnName("subtotal");

                    b.HasKey("IdCompra")
                        .HasName("PK_compras_idCompra");

                    b.HasIndex(new[] { "IdProveedor" }, "idProveedor");

                    b.ToTable("compras", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Detallespedidosproducto", b =>
                {
                    b.Property<int>("IdDetallePedidoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetallePedidoProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetallePedidoProducto"));

                    b.Property<int>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("idPedido");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("PrecioUnitario")
                        .HasColumnType("int");

                    b.Property<int>("UnidadesXproducto")
                        .HasColumnType("int")
                        .HasColumnName("unidadesXproducto");

                    b.HasKey("IdDetallePedidoProducto")
                        .HasName("PK_detallespedidosproductos_idDetallePedidoProducto");

                    b.HasIndex(new[] { "IdPedido" }, "idCotizacion");

                    b.HasIndex(new[] { "IdProducto" }, "idProducto");

                    b.ToTable("detallespedidosproductos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Detallespedidosservicio", b =>
                {
                    b.Property<int>("IdDetallePedidoServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetallePedidoServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetallePedidoServicio"));

                    b.Property<int>("IdPaquete")
                        .HasColumnType("int")
                        .HasColumnName("idPaquete");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("idPedido");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("IdDetallePedidoServicio")
                        .HasName("PK_detallespedidosservicio_idDetallePedidoServicio");

                    b.HasIndex(new[] { "IdPaquete" }, "idPaquete");

                    b.HasIndex(new[] { "IdPedido" }, "idPedido");

                    b.ToTable("detallespedidosservicio", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Detallesproductosxcompra", b =>
                {
                    b.Property<int>("IdDetalleProductoXcompra")
                        .HasColumnType("int")
                        .HasColumnName("idDetalleProductoXCompra");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("Unidades")
                        .HasColumnType("int")
                        .HasColumnName("unidades");

                    b.HasKey("IdDetalleProductoXcompra")
                        .HasName("PK_detallesproductosxcompras_idDetalleProductoXCompra");

                    b.HasIndex(new[] { "IdCompra" }, "idCompra");

                    b.HasIndex(new[] { "IdProducto" }, "idProducto");

                    b.ToTable("detallesproductosxcompras", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHorario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("estado");

                    b.Property<TimeSpan>("FinJornada")
                        .HasColumnType("time")
                        .HasColumnName("finJornada");

                    b.Property<TimeSpan>("InicioJornada")
                        .HasColumnType("time")
                        .HasColumnName("inicioJornada");

                    b.Property<int>("NumeroDia")
                        .HasColumnType("int")
                        .HasColumnName("numeroDia");

                    b.HasKey("IdHorario")
                        .HasName("PK_horarios_idHorario");

                    b.ToTable("horarios", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Motivoscancelacion", b =>
                {
                    b.Property<int>("IdMotivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMotivo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMotivo"));

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("motivo");

                    b.HasKey("IdMotivo")
                        .HasName("PK_motivoscancelacion_idMotivo");

                    b.ToTable("motivoscancelacion", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Paquete", b =>
                {
                    b.Property<int>("IdPaquete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPaquete");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaquete"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdPaquete")
                        .HasName("PK_paquetes_idPaquete");

                    b.ToTable("paquetes", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.PaquetesServicio", b =>
                {
                    b.Property<int>("IdPaqueteXservicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPaqueteXServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaqueteXservicio"));

                    b.Property<int>("IdPaquete")
                        .HasColumnType("int")
                        .HasColumnName("idPaquete");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("idServicio");

                    b.HasKey("IdPaqueteXservicio")
                        .HasName("PK_paquetes_servicios_idPaqueteXServicio");

                    b.HasIndex(new[] { "IdPaquete" }, "idPaquete");

                    b.HasIndex(new[] { "IdServicio" }, "idServicio");

                    b.ToTable("paquetes_servicios", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaCreacion")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("fechaCreacion");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("fechaFinalizacion");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<decimal>("Iva")
                        .HasColumnType("decimal(10, 0)")
                        .HasColumnName("iva");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total");

                    b.HasKey("IdPedido")
                        .HasName("PK_pedidos_idPedido");

                    b.HasIndex(new[] { "IdColaborador" }, "IdColaborador");

                    b.HasIndex(new[] { "IdCliente" }, "idCliente");

                    b.ToTable("pedidos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPermiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<int>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdPermiso")
                        .HasName("PK_permisos_idPermiso");

                    b.ToTable("permisos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("estado");

                    b.Property<int>("IdCategoriaProducto")
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaProducto");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("marca");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("precio");

                    b.Property<int>("Unidades")
                        .HasColumnType("int")
                        .HasColumnName("unidades");

                    b.HasKey("IdProducto")
                        .HasName("PK_productos_idProducto");

                    b.HasIndex(new[] { "IdCategoriaProducto" }, "idCategoriaProducto");

                    b.ToTable("productos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Proveedore", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("telefono");

                    b.HasKey("IdProveedor")
                        .HasName("PK_proveedores_idProveedor");

                    b.ToTable("proveedores", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("IdRol")
                        .HasName("PK_roles_idRol");

                    b.ToTable("roles", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.RolesPermiso", b =>
                {
                    b.Property<int>("IdPermisoXrol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPermisoXRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermisoXrol"));

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int")
                        .HasColumnName("idPermiso");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.HasKey("IdPermisoXrol")
                        .HasName("PK_roles_permisos_idPermisoXRol");

                    b.HasIndex(new[] { "IdPermiso" }, "idPermiso");

                    b.HasIndex(new[] { "IdRol" }, "idRol");

                    b.ToTable("roles_permisos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.SalidaInsumo", b =>
                {
                    b.Property<int>("IdInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idInsumo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsumo"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<DateTime>("FechaRetiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRetiro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<string>("MotivoAnular")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("motivoAnular");

                    b.HasKey("IdInsumo")
                        .HasName("PK_salida_insumos_idInsumo");

                    b.HasIndex(new[] { "IdProducto" }, "idProducto");

                    b.ToTable("salida_insumos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("TiempoMinutos")
                        .HasColumnType("int")
                        .HasColumnName("tiempoMinutos");

                    b.HasKey("IdServicio")
                        .HasName("PK_servicios_idServicio");

                    b.ToTable("servicios", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.ServiciosProducto", b =>
                {
                    b.Property<int>("IdProductoXservicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProductoXServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoXservicio"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("idServicio");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("unidadMedida");

                    b.HasKey("IdProductoXservicio")
                        .HasName("PK_servicios_productos_idProductoXServicio");

                    b.HasIndex(new[] { "IdProducto" }, "idProducto");

                    b.HasIndex(new[] { "IdServicio" }, "idServicio");

                    b.ToTable("servicios_productos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("correo");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaInteraccion")
                        .HasColumnType("date")
                        .HasColumnName("fechaInteraccion");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Instagram")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("instagram");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("telefono");

                    b.HasKey("IdUsuario")
                        .HasName("PK_usuarios_idUsuario");

                    b.HasIndex(new[] { "IdRol" }, "idRol");

                    b.ToTable("usuarios", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime>("Fecha")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("fecha");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int")
                        .HasColumnName("idColaborador");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("idPedido");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("Iva")
                        .HasColumnType("int")
                        .HasColumnName("iva");

                    b.Property<string>("MotivoAnular")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("motivoAnular");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("numeroFactura");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total");

                    b.HasKey("IdVenta")
                        .HasName("PK_ventas_idVenta");

                    b.HasIndex(new[] { "IdColaborador" }, "idColaborador");

                    b.HasIndex(new[] { "IdPedido" }, "idCotizacion");

                    b.HasIndex(new[] { "IdUsuario" }, "idUsuario");

                    b.HasIndex(new[] { "NumeroFactura" }, "ventas$numeroFactura")
                        .IsUnique();

                    b.ToTable("ventas", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Ventasdetalleproducto", b =>
                {
                    b.Property<int>("IdVentaDetalleProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVentaDetalleProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVentaDetalleProducto"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<int>("PrecioUnitario")
                        .HasColumnType("int");

                    b.HasKey("IdVentaDetalleProducto")
                        .HasName("PK_ventasdetalleproductos_idVentaDetalleProducto");

                    b.HasIndex(new[] { "IdProducto" }, "idProducto");

                    b.HasIndex(new[] { "IdVenta" }, "idVenta");

                    b.ToTable("ventasdetalleproductos", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Ventasdetallesservicio", b =>
                {
                    b.Property<int>("IdVentaDetalleServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVentaDetalleServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVentaDetalleServicio"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdPaquete")
                        .HasColumnType("int")
                        .HasColumnName("idPaquete");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<int>("Subtotal")
                        .HasColumnType("int")
                        .HasColumnName("subtotal");

                    b.HasKey("IdVentaDetalleServicio")
                        .HasName("PK_ventasdetallesservicios_idVentaDetalleServicio");

                    b.HasIndex(new[] { "IdVenta" }, "idDetalleCotizacionServicio");

                    b.HasIndex(new[] { "IdPaquete" }, "idPaquete");

                    b.HasIndex(new[] { "IdVenta" }, "idVenta");

                    b.ToTable("ventasdetallesservicios", "alexa_soft");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Cita", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("citas$citas_ibfk_10");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Colaboradore", "IdColaboradorNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdColaborador")
                        .IsRequired()
                        .HasConstraintName("citas$citas_ibfk_8");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Horario", "IdHorarioNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdHorario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("citas$citas_ibfk_5");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Motivoscancelacion", "IdMotivoCancelacionNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdMotivoCancelacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("citas$citas_ibfk_9");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Paquete", "IdPaqueteNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdPaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("citas$citas_ibfk_11");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdColaboradorNavigation");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdMotivoCancelacionNavigation");

                    b.Navigation("IdPaqueteNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Cliente", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Role", "IdRolNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("clientes$clientes_ibfk_1");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Colaboradore", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Role", "IdRolNavigation")
                        .WithMany("Colaboradores")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("colaboradores$colaboradores_ibfk_1");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Compra", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Proveedore", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("compras$compras_ibfk_1");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Detallespedidosproducto", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Pedido", "IdPedidoNavigation")
                        .WithMany("Detallespedidosproductos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("detallespedidosproductos$detallespedidosproductos_ibfk_1");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Producto", "IdProductoNavigation")
                        .WithMany("Detallespedidosproductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("detallespedidosproductos$detallespedidosproductos_ibfk_2");

                    b.Navigation("IdPedidoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Detallespedidosservicio", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Paquete", "IdPaqueteNavigation")
                        .WithMany("Detallespedidosservicios")
                        .HasForeignKey("IdPaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("detallespedidosservicio$detallespedidosservicio_ibfk_1");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Pedido", "IdPedidoNavigation")
                        .WithMany("Detallespedidosservicios")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("detallespedidosservicio$detallespedidosservicio_ibfk_2");

                    b.Navigation("IdPaqueteNavigation");

                    b.Navigation("IdPedidoNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Detallesproductosxcompra", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Compra", "IdCompraNavigation")
                        .WithMany("Detallesproductosxcompras")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("detallesproductosxcompras$detallesproductosxcompras_ibfk_2");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Producto", "IdProductoNavigation")
                        .WithMany("Detallesproductosxcompras")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("detallesproductosxcompras$detallesproductosxcompras_ibfk_1");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.PaquetesServicio", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Paquete", "IdPaqueteNavigation")
                        .WithMany("PaquetesServicios")
                        .HasForeignKey("IdPaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("paquetes_servicios$paquetes_servicios_ibfk_2");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Servicio", "IdServicioNavigation")
                        .WithMany("PaquetesServicios")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("paquetes_servicios$paquetes_servicios_ibfk_1");

                    b.Navigation("IdPaqueteNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Pedido", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("pedidos$pedidos_ibfk_1");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Colaboradore", "IdColaboradorNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdColaborador")
                        .IsRequired()
                        .HasConstraintName("pedidos$pedidos_ibfk_2");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdColaboradorNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Producto", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.CategoriaProducto", "IdCategoriaProductoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoriaProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("productos$productos_ibfk_1");

                    b.Navigation("IdCategoriaProductoNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.RolesPermiso", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Permiso", "IdPermisoNavigation")
                        .WithMany("RolesPermisos")
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("roles_permisos$roles_permisos_ibfk_2");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Role", "IdRolNavigation")
                        .WithMany("RolesPermisos")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("roles_permisos$roles_permisos_ibfk_1");

                    b.Navigation("IdPermisoNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.SalidaInsumo", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Producto", "IdProductoNavigation")
                        .WithMany("SalidaInsumos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("salida_insumos$salida_insumos_ibfk_1");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.ServiciosProducto", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Producto", "IdProductoNavigation")
                        .WithMany("ServiciosProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("servicios_productos$servicios_productos_ibfk_2");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Servicio", "IdServicioNavigation")
                        .WithMany("ServiciosProductos")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("servicios_productos$servicios_productos_ibfk_1");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Usuario", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Role", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("usuarios$usuarios_ibfk_1");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Venta", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Colaboradore", "IdColaboradorNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ventas$ventas_ibfk_2");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Pedido", "IdPedidoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdPedido")
                        .IsRequired()
                        .HasConstraintName("ventas$ventas_ibfk_1");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("ventas$ventas_ibfk_3");

                    b.Navigation("IdColaboradorNavigation");

                    b.Navigation("IdPedidoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Ventasdetalleproducto", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Producto", "IdProductoNavigation")
                        .WithMany("Ventasdetalleproductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ventasdetalleproductos$ventasdetalleproductos_ibfk_3");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Venta", "IdVentaNavigation")
                        .WithMany("Ventasdetalleproductos")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ventasdetalleproductos$ventasdetalleproductos_ibfk_2");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Ventasdetallesservicio", b =>
                {
                    b.HasOne("AlexaSoft_ASP.NET.Models.Paquete", "IdPaqueteNavigation")
                        .WithMany("Ventasdetallesservicios")
                        .HasForeignKey("IdPaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ventasdetallesservicios$ventasdetallesservicios_ibfk_1");

                    b.HasOne("AlexaSoft_ASP.NET.Models.Venta", "IdVentaNavigation")
                        .WithMany("Ventasdetallesservicios")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ventasdetallesservicios$ventasdetallesservicios_ibfk_2");

                    b.Navigation("IdPaqueteNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Cliente", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Colaboradore", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("Pedidos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Compra", b =>
                {
                    b.Navigation("Detallesproductosxcompras");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Horario", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Motivoscancelacion", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Paquete", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("Detallespedidosservicios");

                    b.Navigation("PaquetesServicios");

                    b.Navigation("Ventasdetallesservicios");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Pedido", b =>
                {
                    b.Navigation("Detallespedidosproductos");

                    b.Navigation("Detallespedidosservicios");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Permiso", b =>
                {
                    b.Navigation("RolesPermisos");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Producto", b =>
                {
                    b.Navigation("Detallespedidosproductos");

                    b.Navigation("Detallesproductosxcompras");

                    b.Navigation("SalidaInsumos");

                    b.Navigation("ServiciosProductos");

                    b.Navigation("Ventasdetalleproductos");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Proveedore", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Role", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Colaboradores");

                    b.Navigation("RolesPermisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Servicio", b =>
                {
                    b.Navigation("PaquetesServicios");

                    b.Navigation("ServiciosProductos");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Usuario", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("AlexaSoft_ASP.NET.Models.Venta", b =>
                {
                    b.Navigation("Ventasdetalleproductos");

                    b.Navigation("Ventasdetallesservicios");
                });
#pragma warning restore 612, 618
        }
    }
}
